// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: proto/gochat_db.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GochatDBRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GochatDBRegisterRequest) Reset() {
	*x = GochatDBRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gochat_db_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GochatDBRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GochatDBRegisterRequest) ProtoMessage() {}

func (x *GochatDBRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gochat_db_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GochatDBRegisterRequest.ProtoReflect.Descriptor instead.
func (*GochatDBRegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_gochat_db_proto_rawDescGZIP(), []int{0}
}

func (x *GochatDBRegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GochatDBRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GochatDBRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode   int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg    string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Authtoken string `protobuf:"bytes,3,opt,name=authtoken,proto3" json:"authtoken,omitempty"`
}

func (x *GochatDBRegisterResponse) Reset() {
	*x = GochatDBRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gochat_db_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GochatDBRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GochatDBRegisterResponse) ProtoMessage() {}

func (x *GochatDBRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gochat_db_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GochatDBRegisterResponse.ProtoReflect.Descriptor instead.
func (*GochatDBRegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_gochat_db_proto_rawDescGZIP(), []int{1}
}

func (x *GochatDBRegisterResponse) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GochatDBRegisterResponse) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GochatDBRegisterResponse) GetAuthtoken() string {
	if x != nil {
		return x.Authtoken
	}
	return ""
}

type GochatDBLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GochatDBLoginRequest) Reset() {
	*x = GochatDBLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gochat_db_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GochatDBLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GochatDBLoginRequest) ProtoMessage() {}

func (x *GochatDBLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gochat_db_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GochatDBLoginRequest.ProtoReflect.Descriptor instead.
func (*GochatDBLoginRequest) Descriptor() ([]byte, []int) {
	return file_proto_gochat_db_proto_rawDescGZIP(), []int{2}
}

func (x *GochatDBLoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GochatDBLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GochatDBLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode   int32  `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg    string `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Authtoken string `protobuf:"bytes,3,opt,name=authtoken,proto3" json:"authtoken,omitempty"`
}

func (x *GochatDBLoginResponse) Reset() {
	*x = GochatDBLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_gochat_db_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GochatDBLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GochatDBLoginResponse) ProtoMessage() {}

func (x *GochatDBLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gochat_db_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GochatDBLoginResponse.ProtoReflect.Descriptor instead.
func (*GochatDBLoginResponse) Descriptor() ([]byte, []int) {
	return file_proto_gochat_db_proto_rawDescGZIP(), []int{3}
}

func (x *GochatDBLoginResponse) GetErrcode() int32 {
	if x != nil {
		return x.Errcode
	}
	return 0
}

func (x *GochatDBLoginResponse) GetErrmsg() string {
	if x != nil {
		return x.Errmsg
	}
	return ""
}

func (x *GochatDBLoginResponse) GetAuthtoken() string {
	if x != nil {
		return x.Authtoken
	}
	return ""
}

var File_proto_gochat_db_proto protoreflect.FileDescriptor

var file_proto_gochat_db_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x64,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x62, 0x79, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x62, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x6f, 0x63,
	0x68, 0x61, 0x74, 0x44, 0x42, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x6a, 0x0a, 0x18,
	0x47, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x42, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x14, 0x47, 0x6f, 0x63, 0x68,
	0x61, 0x74, 0x44, 0x42, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x67, 0x0a, 0x15, 0x47, 0x6f, 0x63, 0x68,
	0x61, 0x74, 0x44, 0x42, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72,
	0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x32, 0xcb, 0x01, 0x0a, 0x08, 0x47, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x42, 0x12, 0x5a,
	0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x62, 0x79, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x62, 0x2e, 0x47, 0x6f, 0x63, 0x68, 0x61,
	0x74, 0x44, 0x42, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x70, 0x63, 0x5f,
	0x64, 0x62, 0x2e, 0x47, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x42, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x08, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x29, 0x2e, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x62, 0x79, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x62, 0x2e, 0x47, 0x6f, 0x63, 0x68, 0x61, 0x74,
	0x44, 0x42, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x72, 0x70,
	0x63, 0x5f, 0x64, 0x62, 0x2e, 0x47, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x44, 0x42, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_gochat_db_proto_rawDescOnce sync.Once
	file_proto_gochat_db_proto_rawDescData = file_proto_gochat_db_proto_rawDesc
)

func file_proto_gochat_db_proto_rawDescGZIP() []byte {
	file_proto_gochat_db_proto_rawDescOnce.Do(func() {
		file_proto_gochat_db_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_gochat_db_proto_rawDescData)
	})
	return file_proto_gochat_db_proto_rawDescData
}

var file_proto_gochat_db_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_gochat_db_proto_goTypes = []interface{}{
	(*GochatDBRegisterRequest)(nil),  // 0: gochat_by_rpc_db.GochatDBRegisterRequest
	(*GochatDBRegisterResponse)(nil), // 1: gochat_by_rpc_db.GochatDBRegisterResponse
	(*GochatDBLoginRequest)(nil),     // 2: gochat_by_rpc_db.GochatDBLoginRequest
	(*GochatDBLoginResponse)(nil),    // 3: gochat_by_rpc_db.GochatDBLoginResponse
}
var file_proto_gochat_db_proto_depIdxs = []int32{
	2, // 0: gochat_by_rpc_db.GochatDB.Login:input_type -> gochat_by_rpc_db.GochatDBLoginRequest
	0, // 1: gochat_by_rpc_db.GochatDB.Register:input_type -> gochat_by_rpc_db.GochatDBRegisterRequest
	3, // 2: gochat_by_rpc_db.GochatDB.Login:output_type -> gochat_by_rpc_db.GochatDBLoginResponse
	1, // 3: gochat_by_rpc_db.GochatDB.Register:output_type -> gochat_by_rpc_db.GochatDBRegisterResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_gochat_db_proto_init() }
func file_proto_gochat_db_proto_init() {
	if File_proto_gochat_db_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_gochat_db_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GochatDBRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gochat_db_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GochatDBRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gochat_db_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GochatDBLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_gochat_db_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GochatDBLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_gochat_db_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_gochat_db_proto_goTypes,
		DependencyIndexes: file_proto_gochat_db_proto_depIdxs,
		MessageInfos:      file_proto_gochat_db_proto_msgTypes,
	}.Build()
	File_proto_gochat_db_proto = out.File
	file_proto_gochat_db_proto_rawDesc = nil
	file_proto_gochat_db_proto_goTypes = nil
	file_proto_gochat_db_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GochatDBClient is the client API for GochatDB service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GochatDBClient interface {
	Login(ctx context.Context, in *GochatDBLoginRequest, opts ...grpc.CallOption) (*GochatDBLoginResponse, error)
	Register(ctx context.Context, in *GochatDBRegisterRequest, opts ...grpc.CallOption) (*GochatDBRegisterResponse, error)
}

type gochatDBClient struct {
	cc grpc.ClientConnInterface
}

func NewGochatDBClient(cc grpc.ClientConnInterface) GochatDBClient {
	return &gochatDBClient{cc}
}

func (c *gochatDBClient) Login(ctx context.Context, in *GochatDBLoginRequest, opts ...grpc.CallOption) (*GochatDBLoginResponse, error) {
	out := new(GochatDBLoginResponse)
	err := c.cc.Invoke(ctx, "/gochat_by_rpc_db.GochatDB/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gochatDBClient) Register(ctx context.Context, in *GochatDBRegisterRequest, opts ...grpc.CallOption) (*GochatDBRegisterResponse, error) {
	out := new(GochatDBRegisterResponse)
	err := c.cc.Invoke(ctx, "/gochat_by_rpc_db.GochatDB/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GochatDBServer is the server API for GochatDB service.
type GochatDBServer interface {
	Login(context.Context, *GochatDBLoginRequest) (*GochatDBLoginResponse, error)
	Register(context.Context, *GochatDBRegisterRequest) (*GochatDBRegisterResponse, error)
}

// UnimplementedGochatDBServer can be embedded to have forward compatible implementations.
type UnimplementedGochatDBServer struct {
}

func (*UnimplementedGochatDBServer) Login(context.Context, *GochatDBLoginRequest) (*GochatDBLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedGochatDBServer) Register(context.Context, *GochatDBRegisterRequest) (*GochatDBRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterGochatDBServer(s *grpc.Server, srv GochatDBServer) {
	s.RegisterService(&_GochatDB_serviceDesc, srv)
}

func _GochatDB_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GochatDBLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GochatDBServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gochat_by_rpc_db.GochatDB/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GochatDBServer).Login(ctx, req.(*GochatDBLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GochatDB_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GochatDBRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GochatDBServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gochat_by_rpc_db.GochatDB/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GochatDBServer).Register(ctx, req.(*GochatDBRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GochatDB_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gochat_by_rpc_db.GochatDB",
	HandlerType: (*GochatDBServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _GochatDB_Login_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _GochatDB_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/gochat_db.proto",
}
